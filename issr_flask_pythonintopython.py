# -*- coding: utf-8 -*-
"""ISSR_Flask_PythonIntoPython.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/126MqPnb8HWDgHZauvLnDSwcn309yDSkI
"""

!pip install flask --quiet
!pip install flask-ngrok --quiet
!pip install pyngrok==4.1.1

print("Completed!")

!wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.tgz

!tar -xvf /content/ngrok-stable-linux-amd64.tgz

!./ngrok authtoken 2Y8IYw5KKs9JKtwXyQvpdf4Q7P8_3MaSqHwo7x7PacsiyAKQF

# import Flask from flask module
from flask import Flask, request, jsonify
import datetime
import sys
from io import StringIO
from IPython.utils import capture


# import run_with_ngrok from flask_ngrok to run the app using ngrok
from flask_ngrok import run_with_ngrok

app = Flask(__name__) #app name
run_with_ngrok(app)
@app.after_request
def add_cors_headers(response):
    response.headers['Access-Control-Allow-Origin'] = '*'
    response.headers['Access-Control-Allow-Headers'] = '*'
    response.headers['Content-Type'] = 'application/json'

    return response
@app.route('/', methods=['POST'])
def cosine_similarity_endpoint():
     # Parse request data
    print(request)
    data = request.get_json()
    print("data  "+data)
    code = data
    try:
        with capture.capture_output() as c:
            exec(code, globals(), locals())

        output = c.stdout
    except Exception as e:
        # Handle any exceptions that occur during execution
        return jsonify({'Your Code is not well formated '+{str(e)}})

    print("output "+output)
    # Return result as JSON
    return jsonify({'yourResults': ''+output})

if __name__ == "__main__":
    app.run()